#summary Adding adjectives via ‘modifier’

= Adding adjectives via ‘modifier’ =
We know for a fact that George doesn’t like to be chased, at least not on a full stomach, so we’d like to assign Mary and George suitable adjectives. The problem is that, although simplenlg knows what noun phrases, verbs and prepositional phrases are, it has no concept of what an adjective (or adverb) is. But don’t worry! These parts of speech can be still be generated by the simplenlg library – it just doesn’t label them as such. Instead, they are subsumed under the larger concept of modifier.

To deem Mary ‘cruel’ and George ‘full’, however, you will no longer want to refer to them simply as the ‘subjects’ of the sentence. Instead, let’s also define them as noun phrases (which they are). In that way, we can ascribe the adjectives to those noun phrases by means of the modifier function.
{{{
	NPPhraseSpec subject = nlgFactory.createNounPhrase("Mary");
	NPPhraseSpec object = nlgFactory.createNounPhrase("George");//[1]
}}}
Now, we can apply the adjective ‘cruel’ to these noun phrases by writing:
{{{
	subject.addModifier("cruel");
	object.addModifier("full");
}}}
With the rest of the code in place (assuming that a Realiser realiser has been created already):
{{{
	p.setSubject(subject);
	p.setObject(object);

        String output2 = realiser.realiseSentence(p);
        System.out.println(output2);
}}}
The output will be:
 {{{Cruel Mary chases full George.}}}

----
{{{[1]}}} Note that we can also construct the noun phrase "your monkey" in the following way:
{{{ 
	NPPhraseSpec subject2 = nlgFactory.createNounPhrase("monkey");
	subject2.setDeterminer("your");
}}}